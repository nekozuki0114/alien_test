import { GLTFNode, VRMPose, VRMSchema } from '../types';
import { VRMHumanBone } from './VRMHumanBone';
import { VRMHumanBoneArray } from './VRMHumanBoneArray';
import { VRMHumanBones } from './VRMHumanBones';
import { VRMHumanDescription } from './VRMHumanDescription';
export declare class VRMHumanoid {
    readonly humanBones: VRMHumanBones;
    readonly humanDescription: VRMHumanDescription;
    readonly restPose: VRMPose;
    constructor(boneArray: VRMHumanBoneArray, humanDescription: VRMHumanDescription);
    getPose(): VRMPose;
    setPose(poseObject: VRMPose): void;
    getBone(name: VRMSchema.HumanoidBoneName): VRMHumanBone | undefined;
    getBones(name: VRMSchema.HumanoidBoneName): VRMHumanBone[];
    getBoneNode(name: VRMSchema.HumanoidBoneName): GLTFNode | null;
    getBoneNodes(name: VRMSchema.HumanoidBoneName): GLTFNode[];
    private _createHumanBones;
}
