import * as THREE from 'three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { VRMSchema } from '../types';
export interface VRMMaterialImporterOptions {
    encoding?: THREE.TextureEncoding;
    requestEnvMap?: () => Promise<THREE.Texture | null>;
}
export declare class VRMMaterialImporter {
    private readonly _encoding;
    private readonly _requestEnvMap?;
    constructor(options?: VRMMaterialImporterOptions);
    convertGLTFMaterials(gltf: GLTF): Promise<THREE.Material[] | null>;
    createVRMMaterials(originalMaterial: THREE.Material, vrmProps: VRMSchema.Material, gltf: GLTF): Promise<{
        surface: THREE.Material;
        outline?: THREE.Material;
    }>;
    private _renameMaterialProperty;
    private _convertGLTFMaterial;
    private _extractMaterialProperties;
}
