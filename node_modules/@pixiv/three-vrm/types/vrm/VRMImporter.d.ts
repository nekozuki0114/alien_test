import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { VRMBlendShapeImporter } from './blendshape';
import { VRMFirstPersonImporter } from './firstperson';
import { VRMHumanoidImporter } from './humanoid/VRMHumanoidImporter';
import { VRMLookAtImporter } from './lookat/VRMLookAtImporter';
import { VRMMaterialImporter } from './material';
import { VRMSpringBoneImporter } from './springbone/VRMSpringBoneImporter';
import { VRM } from './VRM';
export interface VRMImporterOptions {
    lookAtImporter?: VRMLookAtImporter;
    humanoidImporter?: VRMHumanoidImporter;
    blendShapeImporter?: VRMBlendShapeImporter;
    firstPersonImporter?: VRMFirstPersonImporter;
    materialImporter?: VRMMaterialImporter;
    springBoneImporter?: VRMSpringBoneImporter;
}
export declare class VRMImporter {
    protected readonly _blendShapeImporter: VRMBlendShapeImporter;
    protected readonly _lookAtImporter: VRMLookAtImporter;
    protected readonly _humanoidImporter: VRMHumanoidImporter;
    protected readonly _firstPersonImporter: VRMFirstPersonImporter;
    protected readonly _materialImporter: VRMMaterialImporter;
    protected readonly _springBoneImporter: VRMSpringBoneImporter;
    constructor(options?: VRMImporterOptions);
    import(gltf: GLTF): Promise<VRM>;
}
