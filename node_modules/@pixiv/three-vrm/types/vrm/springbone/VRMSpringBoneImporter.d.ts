import * as THREE from 'three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { VRMSchema } from '../types';
import { VRMSpringBone } from './VRMSpringBone';
import { VRMSpringBoneColliderGroup, VRMSpringBoneColliderMesh } from './VRMSpringBoneColliderGroup';
import { VRMSpringBoneGroup, VRMSpringBoneManager } from './VRMSpringBoneManager';
export declare class VRMSpringBoneImporter {
    import(gltf: GLTF): Promise<VRMSpringBoneManager | null>;
    protected _createSpringBone(bone: THREE.Object3D, hitRadius: number, stiffiness: number, gravityDir: THREE.Vector3, gravityPower: number, dragForce: number, colliders?: THREE.Mesh[]): VRMSpringBone;
    protected _importSpringBoneGroupList(gltf: GLTF, schemaSecondaryAnimation: VRMSchema.SecondaryAnimation, colliderGroups: VRMSpringBoneColliderGroup[]): Promise<VRMSpringBoneGroup[]>;
    protected _importColliderMeshGroups(gltf: GLTF, schemaSecondaryAnimation: VRMSchema.SecondaryAnimation): Promise<VRMSpringBoneColliderGroup[]>;
    protected _createColliderMesh(radius: number, offset: THREE.Vector3): VRMSpringBoneColliderMesh;
}
